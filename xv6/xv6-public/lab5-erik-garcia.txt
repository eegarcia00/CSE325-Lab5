ESTIMATE of time to complete lab:  12 hours     
 
        Start    Time     Lab
Date    Time    Spent    Part    Work completed
----    -----   ----     ----    ---------------------
11/1    18:00    2       1-5     Went over lab description & xv6 memory management
11/2    17:30    1.5      1      Implement function getNumFreePages()
11/4    14:00    2       2&3     Implemented decrement & increment functions as well as part of copyuvm_cow 
11/4    19:00    1        3      Finished function copyuvm_cow
11/6    18:00    1        4      Looked into how to handle page faults in xv6
11/7    17:30    1       1-4     Met with Keaton to discuss/solve current issues in Lab-5
11/8    21:00    2       4&5     Worked on finishing handle_pgflt and testcow.c functions.
11/11   20:00    1       1-5     Completed rest of files for submission
                 11:30 TOTAL time spent
	A brief discussion of the major difficulties encountered

	Some of the major difficulties I encountered in this lab were in exercises 3-5. In exercise 3 
        copyuvm_cow seemed easy at first since it was mainly a copy of copyuvm but understanding how to map
        the parent's physical frame read only in both the child and parent process was not clear to me at first.
        The handle_pgflt function in exercise 4 was by far the hardest function to implement. Having to deal with
        errors such as illegal range of VA was a bit tricky to manage. When Keaton and I got together it took us
        some time to understand how to properly attack the problem. Exercise 5 was not as difficult as 3&4 but for
        me it was hard to show everything that was wanted in the lab results. A test file like all of the other 
        labs provided would've been convenient for me personally.  